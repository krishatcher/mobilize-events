{"version":3,"sources":["http-common.ts","services/event.service.tsx","components/event-list.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","create","baseURL","headers","http","get","id","EventsList","props","onChangeSearchTitle","bind","retrieveEvents","refreshList","setActiveEvent","state","eventItems","currentEvent","currentIndex","searchTitle","this","e","target","value","setState","EventDataService","getAll","then","response","data","console","log","catch","eventItem","index","className","map","tutorial","onClick","title","description","to","Component","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gRAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,4BACTC,QAAS,CACL,eAAgB,sBCaT,M,sFAdX,WACI,OAAOC,EAAKC,IAAkB,gF,iBAGlC,SAAIC,GACA,OAAOF,EAAKC,IAAL,qBAAuBC,Q,aCKjBC,E,kDACjB,WAAYC,GAAe,IAAD,8BACtB,cAAMA,IACDC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBAGtB,EAAKI,MAAQ,CACTC,WAAY,GACZC,aAAc,KACdC,cAAe,EACfC,YAAa,IAZK,E,qDAgB1B,WACIC,KAAKR,mB,iCAGT,SAAoBS,GAChB,IAAMF,EAAcE,EAAEC,OAAOC,MAE7BH,KAAKI,SAAS,CACVL,YAAaA,M,4BAIrB,WAAkB,IAAD,OACbM,EAAiBC,SACZC,MAAK,SAAAC,GACF,EAAKJ,SAAS,CACVR,WAAYY,EAASC,KAAKA,OAE9BC,QAAQC,IAAIH,EAASC,SAExBG,OAAM,SAAAX,GACHS,QAAQC,IAAIV,Q,yBAIxB,WACID,KAAKR,iBACLQ,KAAKI,SAAS,CACVP,aAAc,KACdC,cAAe,M,4BAIvB,SAAee,EAAuBC,GAClCd,KAAKI,SAAS,CACVP,aAAcgB,EACdf,aAAcgB,M,oBAsBtB,WAAU,IAAD,OACL,EAAgEd,KAAKL,MAAhDC,GAArB,EAAQG,YAAR,EAAqBH,YAAYC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,aAE/C,OACI,sBAAKiB,UAAU,WAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sDAEJ,sBAAKA,UAAU,WAAf,UACI,6CAEA,oBAAIA,UAAU,aAAd,SACKnB,GACDA,EAAWoB,KAAI,SAACC,EAAsBH,GAAvB,OACX,oBACIC,UACI,oBACCD,IAAUhB,EAAe,SAAW,IAEzCoB,QAAS,kBAAM,EAAKxB,eAAeuB,EAAUH,IALjD,SAQKG,EAASE,OAFLL,WAOrB,qBAAKC,UAAU,WAAf,SACKlB,EACG,gCACI,uCACA,gCACI,gCACI,8CACK,IACRA,EAAasB,SAElB,gCACI,gCACI,oDACK,IACRtB,EAAauB,eAGlB,cAAC,IAAD,CACIC,GAAI,cAAgBxB,EAAaV,GACjC4B,UAAU,QAFd,6BAQJ,gCACI,uBACA,wE,GAjIYO,aCYzBC,E,4JAnBb,WACE,OACI,gCACE,qBAAKR,UAAU,2CAAf,SACE,cAAC,IAAD,CAAMM,GAAI,UAAWN,UAAU,eAA/B,wBAKF,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAM,CAAC,IAAK,cAAeC,UAAWtC,e,GAZ/CkC,aCQHK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.8e4dc54d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"http://localhost:3000/api\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});\n","import http from \"../http-common\";\nimport IApiResponse from \"../types/ApiResponse\";\n\nclass EventDataService {\n    getAll() {\n        return http.get<IApiResponse>(\"https://api.mobilize.us/v1/organizations/1/events?zipcode=45459&max_dist=5\");\n    }\n\n    get(id: string) {\n        return http.get(`/tutorials/${id}`);\n    }\n/*\n    create(data: IApiResponse) {\n        return http.post(\"/tutorials\", data);\n    }\n*/\n}\n\nexport default new EventDataService();\n","import { Component, ChangeEvent } from \"react\";\nimport EventDataService from \"../services/event.service\"\nimport { Link } from \"react-router-dom\";\nimport IEventItem from \"../types/EventItem\";\n\ntype Props = {};\n\ntype State = {\n    eventItems: Array<IEventItem>,\n    currentEvent: IEventItem | null,\n    currentIndex: number,\n    searchTitle: string\n};\n\nexport default class EventsList extends Component<Props, State>{\n    constructor(props: Props) {\n        super(props);\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n        this.retrieveEvents = this.retrieveEvents.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n        this.setActiveEvent = this.setActiveEvent.bind(this);\n        //this.searchTitle = this.searchTitle.bind(this);\n\n        this.state = {\n            eventItems: [],\n            currentEvent: null,\n            currentIndex: -1,\n            searchTitle: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveEvents();\n    }\n\n    onChangeSearchTitle(e: ChangeEvent<HTMLInputElement>) {\n        const searchTitle = e.target.value;\n\n        this.setState({\n            searchTitle: searchTitle\n        });\n    }\n\n    retrieveEvents() {\n        EventDataService.getAll()\n            .then(response => {\n                this.setState({\n                    eventItems: response.data.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    refreshList() {\n        this.retrieveEvents();\n        this.setState({\n            currentEvent: null,\n            currentIndex: -1\n        });\n    }\n\n    setActiveEvent(eventItem: IEventItem, index: number) {\n        this.setState({\n            currentEvent: eventItem,\n            currentIndex: index\n        });\n    }\n/*\n    searchTitle() {\n        this.setState({\n            currentTutorial: null,\n            currentIndex: -1\n        });\n\n        TutorialDataService.findByTitle(this.state.searchTitle)\n            .then(response => {\n                this.setState({\n                    tutorials: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n*/\n    render() {\n        const { searchTitle, eventItems, currentEvent, currentIndex } = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-8\">\n                    <p>search goes here...</p>\n                </div>\n                <div className=\"col-md-6\">\n                    <h4>Events List</h4>\n\n                    <ul className=\"list-group\">\n                        {eventItems &&\n                        eventItems.map((tutorial: IEventItem, index: number) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveEvent(tutorial, index)}\n                                key={index}\n                            >\n                                {tutorial.title}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentEvent ? (\n                        <div>\n                            <h4>Event</h4>\n                            <div>\n                                <label>\n                                    <strong>Title:</strong>\n                                </label>{\" \"}\n                                {currentEvent.title}\n                            </div>\n                            <div>\n                                <label>\n                                    <strong>Description:</strong>\n                                </label>{\" \"}\n                                {currentEvent.description}\n                            </div>\n\n                            <Link\n                                to={\"/tutorials/\" + currentEvent.id}\n                                className=\"badge\"\n                            >\n                                View details\n                            </Link>\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on an Event...</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport EventsList from \"./components/event-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/events\"} className=\"navbar-brand\">\n              bezKoder\n            </Link>\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/tutorials\"]} component={EventsList} />\n            </Switch>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}